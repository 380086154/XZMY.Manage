@model XZMY.Manage.Model.ViewModel.Advisories.VmAdvisory
@{
    Layout = "~/Views/Shared/_Layout456.cshtml";
    ViewBag.Title = "创建/编辑";
}
<!-- BEGIN PAGE BAR -->
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <a href="/home/index">主页</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <span id="module">咨询管理</span>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <span id="action">编辑咨询</span>
        </li>
    </ul>
</div>
<!-- END PAGE BAR -->
<div class="row" style="margin-top:20px">
    <div class="col-md-12">
        <!-- BEGIN VALIDATION STATES-->
        <div class="portlet light bordered" id="form_wizard_1">
            <div class="portlet-title">
                <div class="caption">
                    <span style="font-size: 25px;color: #000">基础信息</span>
                </div>
                <div class="actions">
                    @if (Model.DataId != Guid.Empty)
                    {
                        <a class="btn btn-default" href="/Advisory/Details/@Model.DataId">
                            <i class="fa fa-eye"></i> 详细
                        </a>
                    }
                    <a class="btn btn-default" href="/Advisory/List">
                        <i class="fa fa-list-ul"></i> 返回列表
                    </a>
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form id="defaultForm" class="form-horizontal" method="post" novalidate="novalidate">
                    <div class="form-body">
                        @*<h3 class="form-section">Basic validation States</h3>*@

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">标题<span class="required" aria-required="true"> * </span></label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextBoxFor(x => x.Title, new { @maxlength = "50", @class = "form-control" })
                                            @Html.HiddenFor(x => x.DataId)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">类型</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select id="TypeId" name="TypeId" class="form-control">
                                                <option value="">请选择</option>
                                            </select>
                                            @Html.HiddenFor(x => x.TypeName)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">描述</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextAreaFor(x => x.Description, new { @maxlength = "50", @class = "form-control" })
                                            @Html.HiddenFor(x => x.DataId)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <h3 class="form-section">资讯人信息</h3>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">咨询人<span class="required" aria-required="true"> * </span></label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextBoxFor(x => x.Name, new { @maxlength = "50", @class = "form-control" })
                                            @Html.HiddenFor(x => x.DataId)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">联系方式</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select id="ContactTypeId" name="ContactTypeId" class="form-control">
                                                <option value="">请选择</option>
                                            </select>
                                            @Html.HiddenFor(x => x.ContactTypeName)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">联系号码<span class="required" aria-required="true"> * </span></label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextBoxFor(x => x.ContactNumber, new { @maxlength = "50", @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <button type="submit" class="btn green">保存</button>
                                    <button type="reset" class="btn default">重置</button>
                            </div>
                        </div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
        <!-- END VALIDATION STATES-->
    </div>
</div>

<script type="text/javascript">
    jQuery(document).ready(function () {
        var form1 = $('#defaultForm');
        var hfId = $('#Id');
        var error1 = $('.alert-error', form1);
        var success1 = $('.alert-success', form1);
        
        form1.validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block help-block-error', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                Title: { required: true, remote: { url: '/Advisory/AjaxIsExist/@Model.DataId', message: '已存在' } },
                TypeId: { required: true },
                Name: { required: true },
                ContactNumber: { required: true }
            },

            invalidHandler: function (event, validator) { //display error alert on form submit
                success1.hide();
                error1.show();
                App.scrollTo(error1, -200);
            },

            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip({ 'container': 'body' });
            },

            highlight: function (element) { // hightlight error inputs
                $(element).closest('.form-group').removeClass("has-success").addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                //success1.show();
                //error1.hide();
                //form1.submit();
                $("#TypeName").val($("#TypeId").find("option:selected").text());
                $("#ContactTypeName").val($("#ContactTypeId").find("option:selected").text());
                var data = form1.serializeObject();
                $.ajax({
                    type: 'POST',
                    url: '/Advisory/AjaxEdit',
                    data: data,
                    dataType: 'JSON',
                    success: function (result) {
                        if (result.success)
                            location.replace('/Advisory/details/' + result.Id);
                        else {
                            showToast(3, '系统消息', result.message);//错误信息
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        showToast(3, '系统消息', JSON.stringify(errorThrown));//错误信息
                    },
                    async: false
                });
            }
        });

        var bindDataDictionary = function () {
            $.getJSON('/Content/Custom/DataDictionary.ashx', { action: 'GetGetCatagory', Key: 'AdvisoryType,AdvisoryContactType' }, function (data) {
                appendOption(data.AdvisoryType, '#TypeId');
                appendOption(data.AdvisoryContactType, '#ContactTypeId');
            });
        };

        bindDataDictionary();
    });
</script>