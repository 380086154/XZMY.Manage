@model XZMY.Manage.Model.ViewModel.Funding.VmMemberFund
@*@model XZMY.Manage.Model.DataModel.User.UserAccount*@

@{
    ViewBag.Title = "创建/编辑";
}
<div id="dashboard">
    <!-- BEGIN DASHBOARD STATS -->
    <div class="row-fluid">
        <div class="span10">
            <div class="tabbable tabbable-custom boxless">
                <div class="tab-content">
                    <div class="tab-pane active" id="tab_1">
                        <div class="portlet box blue">
                            <div class="portlet-title">
                                <div class="caption">
                                    <i class="icon-reorder"></i>基础信息
                                </div>
                                <div class="tools">
                                    <a href="javascript:void(0);" class="collapse"></a>
                                </div>
                            </div>
                            <div class="portlet-body form">
                                <!-- BEGIN FORM-->
                                <form id="defaultForm" class="form-horizontal" method="post" novalidate="novalidate">
                                    @Html.HiddenFor(x => x.DataId);
                                    @Html.HiddenFor(x => x.MemberId);
                                    @Html.HiddenFor(x => x.MemberName);
                                    <h3 class="form-section">学校信息</h3>
                                    <div class="alert alert-error hide">
                                        <button class="close" data-dismiss="alert"></button>
                                        You have some form errors. Please check below.
                                    </div>
                                    <div class="alert alert-success hide">
                                        <button class="close" data-dismiss="alert"></button>
                                        Your form validation is successful!
                                    </div>

                                    <div class="row-fluid">
                                        <div class="span6 ">
                                            <div class="control-group">
                                                <label class="control-label" for="MemberName">账户<span class="required">*</span></label>
                                                <div class="controls">
                                                    @Html.LabelFor(x => x.MemberName, new { @maxlength = "50", @class = "m-wrap span10" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="span6 ">
                                            <div class="control-group">
                                                <label class="control-label" for="Name">基金名称<span class="required">*</span></label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.Name, new { @maxlength = "50", @class = "m-wrap span10" })
                                                </div>
                                            </div>
                                        </div>
                                        <!--/span-->
                                        <!--/span-->
                                    </div>


                                    <!--两列-->
                                    <div class="row-fluid">
                                        <div class="span6 ">
                                            <div class="control-group">
                                                <label class="control-label" for="Quantity">购买数量<span class="required">*</span></label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.Quantity, new { @maxlength = "10", @class = "m-wrap span10" })
                                                </div>
                                            </div>
                                        </div>
                                        <!--/span-->
                                        <div class="span6 ">
                                            <div class="control-group">
                                                <label class="control-label" for="Amount">金额<span class="required">*</span></label>
                                                <div class="controls">
                                                    @*<input type="text" id="firstName" class="m-wrap span10" placeholder="Chee Kin">*@
                                                    @Html.TextBoxFor(x => x.Amount, new { @maxlength = "10", @class = "m-wrap span10" })
                                                </div>
                                            </div>
                                        </div>
                                        <!--/span-->
                                    </div>



                                    <div class="form-actions">
                                        <button type="submit" class="btn blue"><i class="icon-ok"></i> 保存</button>

                                    </div>
                                </form>
                                <!-- END FORM-->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END DASHBOARD STATS -->
    <div class="clearfix"></div>
</div>
<script type="text/javascript">

    jQuery(document).ready(function () {
        var form1 = $('#defaultForm');
        var error1 = $('.alert-error', form1);
        var success1 = $('.alert-success', form1);

        form1.validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-inline', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                Name: { minlength: 1, required: true }
            },

            //invalidHandler: function (event, validator) { //display error alert on form submit
            //    success1.hide();
            //    error1.show();
            //    App.scrollTo(error1, -200);
            //},

            highlight: function (element) { // hightlight error inputs
                $(element).closest('.help-inline').removeClass('ok'); // display OK icon
                $(element).closest('.control-group').removeClass('success').addClass('error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change dony by hightlight
                $(element).closest('.control-group').removeClass('error'); // set error class to the control group
            },

            success: function (label) {
                label.addClass('valid').addClass('help-inline ok') // mark the current input as valid and display OK icon
                .closest('.control-group').removeClass('error').addClass('success'); // set success class to the control group
            },

            submitHandler: function (form) {
                //success1.show();
                //error1.hide();
                //form1.submit();

                var data = form1.serializeObject();
                $.ajax({
                    type: 'POST',
                    url: '/Funding/AjaxEdit',
                    data: data,
                    dataType: 'JSON',
                    success: function (result) {
                        //redata = result;

                        if(result.success)
                            location.replace('/Funding/Edit/' + result.Id);
                        else
                            showToast(3, '系统消息', result.message);//错误信息
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        showToast(3, '系统消息', JSON.stringify(errorThrown));//错误信息
                        //LigerEP.ShowMsg('error', '网络错误！即将重新登录！');
                        //window.location.replace("/MCustoms/Login");
                    },
                    async: false
                });
            }
        });
    });





</script>
