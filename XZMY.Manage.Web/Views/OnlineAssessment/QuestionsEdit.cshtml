@using XZMY.Manage.Web.Controllers.OnlineAssessment
@using XZMY.Manage.Model.Enum
@using Newtonsoft.Json;
@model XZMY.Manage.Model.ViewModel.OnlineAssessment.VmOnlineAssessmentQuestions
@{
    Layout = "~/Views/Shared/_Layout456.cshtml";
    ViewBag.Title = "创建/编辑";
}

<!-- BEGIN PAGE BAR -->
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <a href="/home/index">主页</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <span id="module">在线评估</span>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <span id="action">问题编辑</span>
        </li>
    </ul>
</div>


<!-- END PAGE BAR -->
<div class="row" style="margin-top: 20px">
    <div class="col-md-12">
        <!-- BEGIN VALIDATION STATES-->
        <div class="portlet light bordered" id="form_wizard_1">
            @*<div class="portlet-title">
                
                <div class="actions">
                    @if (Model.DataId != Guid.Empty)
                    {

                        <a class="btn btn-default" href="/OnlineAssessment/QuestionsAjaxDelete?Id=@Model.DataId">
                            <i class="fa fa-list-ul"></i> 删除该问题
                        </a>
                    }
                </div>
            </div>*@
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <form id="defaultForm" class="form-horizontal" method="post" novalidate="novalidate">
                    @Html.HiddenFor(x => x.DataId)
                    <div class="form-body">
                        <div class="actions">
                            @{
                                Guid SecurityId = Guid.Empty;
                                if (Model.DataId == Guid.Empty)
                                {
                                    if (Request.QueryString["SecurityId"] != null)
                                    {
                                        SecurityId = Request.QueryString["SecurityId"].ToGuid(Guid.Empty);
                                    }
                                }
                                else {
                                    SecurityId = Model.OnlineAssessmentSecurityId;
                                }
                                OnlineAssessmentController bll = new OnlineAssessmentController();
                                int t = 0;
                                var list = bll.GetListOnlineAssessmentQuestions(new XZMY.Manage.Model.ViewModel.OnlineAssessment.VmOnlineAssessmentQuestions() { OnlineAssessmentSecurityId = SecurityId }, out t);
                                list = list.OrderBy(x => x.Sort).ToList();
                                foreach (var m in list)
                                {
                                    <a class="btn btn-default" href="/OnlineAssessment/QuestionsEdit/@m.Id?SecurityId=@SecurityId">
                                        <i class="fa fa-list-ul"></i> @m.Sort
                                    </a>
                                }
                            }
                        </div>
                        <input id="OnlineAssessmentSecurityId" name="OnlineAssessmentSecurityId" type="hidden" value="@SecurityId" />
                        <h3 class="form-section">问题信息</h3>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">试卷</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            
                                            @Html.HiddenFor(x => x.OnlineAssessmentSecurityId)
                                                @{
                                                    if (Model.DataId == Guid.Empty)
                                                    {
                                                        if (Request.QueryString["SecurityId"] != null)
                                                        {
                                                        <p class="form-control-static"> @bll.GetModelOnlineAssessmentSecurity(Request.QueryString["SecurityId"].ToGuid(Guid.Empty)).Name </p>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <p class="form-control-static"> @bll.GetModelOnlineAssessmentSecurity(Model.OnlineAssessmentSecurityId).Name </p>
                                                    }

                                                    @*else
                                                    {
                                                        int t = 0;
                                                        var list = bll.GetListOnlineAssessmentSecurity(new XZMY.Manage.Model.ViewModel.OnlineAssessment.VmOnlineAssessmentSecurity() { State = XZMY.Manage.Model.Enum.EState.启用 }, out t);
                                                        <select id="OnlineAssessmentSecurityId" name="OnlineAssessmentSecurityId" class="form-control input-inline">
                                                            @foreach (var m in list)
                                                            {
                                                            <option value="@m.Id">@m.Name</option>
                                                            }
                                                        </select>
                                                    }*@
                                                }
                                                        
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">题目类型</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select id="Type" name="Type" class="form-control input-inline">
                                                @if (Model.Type == EOnlineAssessmentQuestionType.图片单选题)
                                                {
                                                    <option value="2" selected="selected">@EOnlineAssessmentQuestionType.图片单选题.ToString()</option>
                                                }
                                                else
                                                {
                                                    <option value="2">@EOnlineAssessmentQuestionType.图片单选题.ToString()</option>
                                                }
                                                @if (Model.Type == EOnlineAssessmentQuestionType.文字单选题)
                                                {
                                                    <option value="1" selected="selected">@EOnlineAssessmentQuestionType.文字单选题.ToString()</option>
                                                }
                                                else
                                                {
                                                    <option value="1">@EOnlineAssessmentQuestionType.文字单选题.ToString()</option>
                                                }
                                                @if (Model.Type == EOnlineAssessmentQuestionType.分组单选题)
                                                {
                                                    <option value="3" selected="selected">@EOnlineAssessmentQuestionType.分组单选题.ToString()</option>
                                                }
                                                else
                                                {
                                                    <option value="3">@EOnlineAssessmentQuestionType.分组单选题.ToString()</option>
                                                }
                                            </select>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">用时（秒）</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextBoxFor(x => x.UseTime, new { @maxlength = "50", @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">状态</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @if (Model.State == XZMY.Manage.Model.Enum.EState.禁用)
                                            {
                                                <label class="mt-radio mt-radio-outline">
                                                    <input type="radio" name="State" id="State1" value="1"> 启用
                                                    <span></span>
                                                </label>
                                                <label class="mt-radio mt-radio-outline">
                                                    <input type="radio" name="State" id="State2" value="2" checked> 禁用
                                                    <span></span>
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="mt-radio mt-radio-outline">
                                                    <input type="radio" name="State" id="State1" value="1" checked> 启用
                                                    <span></span>
                                                </label>
                                                <label class="mt-radio mt-radio-outline">
                                                    <input type="radio" name="State" id="State2" value="2"> 禁用
                                                    <span></span>
                                                </label>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">标题</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextBoxFor(x => x.Title, new { @maxlength = "550", @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">第几题</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            @Html.TextBoxFor(x => x.Sort, new { @maxlength = "550", @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                        
                        
                        <div class="row">
                            <div class="col-md-6" style="width:100%">
                                <div class="form-group">
                                    <label class="control-label col-md-3" style="width:200px;">问题描述</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                           
                                            <script id="QuestioneditorDescription" type="text/plain" style="width: 100%; height: 300px;">@Html.Raw(Model.Description)</script>
                                            @Html.HiddenFor(x => x.Description)
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                    @if (Model.DataId != Guid.Empty)
                    {
                        if (Model.Type == EOnlineAssessmentQuestionType.分组单选题)
                        {
                        <h3 class="form-section">答案组信息</h3>
                        <div id="Groupitems"></div>
                        <div class="row-fluid" style="text-align: right">
                            <a class="btn btn-default addGroup" href="javascript:void(0);">添加分组答案</a>
                        </div>
                        }

                        <h3 class="form-section">答案信息</h3>
                        <div id="items"></div>
                        <div class="row-fluid" style="text-align: right">
                            <a class="btn btn-default add" href="javascript:void(0);">添加答案</a>
                        </div>
                    }
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <button type="submit" class="btn green">保存</button>
                                <button type="reset" class="btn default">重置</button>
                                <input id="index" name="index" type="hidden" value="0" />
                                <input id="indexGroup" name="indexGroup" type="hidden" value="0" />
                                @{
                                    int listAnswersCount = 0;
                                    var listAnswers = bll.GetListOnlineAssessmentAnswers(new XZMY.Manage.Model.ViewModel.OnlineAssessment.VmOnlineAssessmentAnswers() { OnlineAssessmentQuestionsId = Model.DataId }, out listAnswersCount);
                                    listAnswers = listAnswers.OrderBy(x => x.CreatedTime).ToList();
                                    <input id="JsonlistAnswers" name="JsonlistAnswers" type="hidden" value="@JsonConvert.SerializeObject(listAnswers)" />
                                    int listAnswersGroupCount = 0;
                                    var listAnswersGroup = bll.GetListOnlineAssessmentAnswersGroup(new XZMY.Manage.Model.ViewModel.OnlineAssessment.VmOnlineAssessmentAnswersGroup() { OnlineAssessmentQuestionsId = Model.DataId }, out listAnswersGroupCount);
                                    listAnswersGroup = listAnswersGroup.OrderBy(x => x.CreatedTime).ToList();
                                    <input id="JsonlistAnswersGroup" name="JsonlistAnswersGroup" type="hidden" value="@JsonConvert.SerializeObject(listAnswersGroup)" />
                                    }


                            </div>
                        </div>
                    </div>
                 


                    <div id="score-contentGroup" class="row" style="display: none">
                        <div class="row">
                            <div class="col-md-6" index="__INDEX__" style="width:100%">
                                <div class="form-group">
                                    <label class="control-label col-md-3" style="width:200px;" for="txtDescription__INDEX__">答案分组 __INDEX__ </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input id="GroupId__INDEX__" name="GroupId__INDEX__" class="GroupId form-control" type="hidden" value="__GroupId__" />
                                            <input id="GroupName__INDEX__" name="GroupName__INDEX__" class="GroupName form-control" type="text" value="__GroupName__" style="width:80%; float:left;" />
                                            <button type="button" onclick="deleteAnswersGroup(this);" class="btn default" style="float:right;">删除</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="score-content1" class="row" style="display: none">
                        <div class="row">
                            <div class="col-md-6" index="__INDEX__" style="width:100%">
                                <div class="form-group">
                                    <label class="control-label col-md-3" style="width:200px;" for="txtDescription__INDEX__">答案__INDEX__ 描述</label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input id="OnlineAssessmentAnswersId__INDEX__" name="OnlineAssessmentAnswersId__INDEX__" class="OnlineAssessmentAnswersId" type="hidden"  value="__AnswersId__"/>
                                            <textarea id="AnswersDescription__INDEX__" name="AnswersDescription__INDEX__" style="width:50%; float:left;" >__AnswerDescription__</textarea>
                                           
                                            <input id="AnswersPicture__INDEX__" name="AnswersPicture__INDEX__" class="AnswersPicture" type="hidden" value="__Picture__" />
                                            <div id="btnImage__INDEX__" style="float: left; margin-left: 8px;" class="upload-box upload-img"></div>
                                            <div class="photo-list" style="float:left;width:30%; ">
                                            </div>
                                            <button type="button" onclick="deleteAnswers(this);" class="btn default" style="float:right;">删除</button>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                <!-- END FORM-->
            </div>
        </div>
        <!-- END VALIDATION STATES-->
    </div>
</div>
@section JavaScript{
    <script src="/Content/Custom/UEditor/ueditor.config.js" type="text/javascript" charset="utf-8"></script>
    <script src="/Content/Custom/UEditor/ueditor.all.min.js" type="text/javascript" charset="utf-8"> </script>
    <!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->
    <!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->
    <script src="/Content/Custom/UEditor/lang/zh-cn/zh-cn.js" type="text/javascript" charset="utf-8"></script>

<script type="text/javascript" src="/UploadCode/webuploader/webuploader.min.js"></script>
<script type="text/javascript" charset="utf-8" src="/UploadCode/js/uploader.js"></script>
    <script type="text/javascript">
        $("#index").val(0);
        $("#indexGroup").val(0);
        var deleteAnswers = function (obj) {
            if ($(obj).parent().find(".OnlineAssessmentAnswersId").val() == "00000000-0000-0000-0000-000000000000") {
                $(obj).parent().parent().parent().parent().empty();
            } else {
                location.href = "/OnlineAssessment/AnswerAjaxDelete?Id=" + $(obj).parent().find(".OnlineAssessmentAnswersId").val();
            }
        }
        var deleteAnswersGroup = function (obj) {
            if ($(obj).parent().find(".GroupId").val() == "00000000-0000-0000-0000-000000000000") {
                $(obj).parent().parent().parent().parent().empty();
            } else {
                location.href = "/OnlineAssessment/AnswerGroupAjaxDelete?Id=" + $(obj).parent().find(".GroupId").val();
            }
        }
        var addAnswerItemGroup = function (GroupId, GroupName) {
       
            $("#indexGroup").val(parseInt($("#indexGroup").val()) + 1);
            var strHtml = "";
            strHtml = $('#score-contentGroup').html();

            strHtml = strHtml.replace(/__INDEX__/ig, $("#indexGroup").val())
           .replace(/__GroupId__/, GroupId)
           .replace(/__GroupName__/, GroupName);
            

            $(strHtml).appendTo($("#Groupitems"));
        };

        ///添加答案项
        var addAnswerItem = function (Id, Description, Picture, QuestionType) {
            $("#index").val(parseInt($("#index").val()) + 1);
            var strHtml = "";
            if (QuestionType == 1) {  //文字单选题
                strHtml = $('#score-content1').html();
            } else {
                strHtml = $('#score-content1').html();
            }
            @*"2">@EOnlineAssessmentQuestionType.图片单选题.ToString()</option>
            <option value="3">@EOnlineAssessmentQuestionType.分组单选题.ToString()<*@

            strHtml = strHtml.replace(/__INDEX__/ig, $("#index").val())
            .replace(/__AnswerPicture__/, Picture)
            .replace(/__AnswerDescription__/, Description)
            .replace(/__Picture__/, Picture)
            .replace(/__AnswersId__/, Id);
            $(strHtml).appendTo($("#items"));
                      if ($("#AnswersPicture" + $("#index").val()).val() != "") {
                          var imgUrl = ShowImage($("#AnswersPicture" + $("#index").val()).val(), "#", false, false); 
                          $("#AnswersPicture" + $("#index").val()).siblings(".photo-list").html("");
                $(imgUrl).appendTo($("#AnswersPicture" + $("#index").val()).siblings(".photo-list"));
            }

            $("#btnImage" + $("#index").val()).empty();
            $("#btnImage" + $("#index").val()).InitUploader({
                ImageFolder: "Album",
                btntext: "上传图片",
                multiple: true,
                water: false,
                thumbnail: false,
                NoUrl: true,
                sendurl: "/UploadCode/ajax.ashx",
            });
        };
        var pageLoad = function () {
            var JsonlistAnswers = jQuery.parseJSON($("#JsonlistAnswers").val());
            $.each(JsonlistAnswers, function (i, item) {
                addAnswerItem(item["Id"], item["Description"], item["Picture"], $("#Type").val()); 
            });

            var JsonlistAnswersGroup = jQuery.parseJSON($("#JsonlistAnswersGroup").val());
            $.each(JsonlistAnswersGroup, function (i, item) {
                addAnswerItemGroup(item["Id"], item["GroupName"]);
            });
        }
        $(function () {
            pageLoad();
            $('.add').click(function () {
                addAnswerItem('00000000-0000-0000-0000-000000000000', '', '', $("#Type").val());
            });
            $('.addGroup').click(function () {
                addAnswerItemGroup('00000000-0000-0000-0000-000000000000', '');
            });
            
        });
        jQuery(document).ready(function () {
            var form1 = $('#defaultForm');
            var hfId = $('#Id');
            var error1 = $('.alert-error', form1);
            var success1 = $('.alert-success', form1);
            var isRequired = hfId.val() == '00000000-0000-0000-0000-000000000000';

            $("input[name='State'][value=@Model.State.GetHashCode()]").attr("checked", true);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",
                rules: {
                    Title: { minlength: 1, required: true }
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                    var icon = $(element).parent('.input-icon').children('i');
                    icon.removeClass('fa-check').addClass("fa-warning");
                    icon.attr("data-original-title", error.text()).tooltip({ 'container': 'body' });
                },

                highlight: function (element) { // hightlight error inputs
                    $(element).closest('.form-group').removeClass("has-success").addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight

                },

                success: function (label, element) {
                    var icon = $(element).parent('.input-icon').children('i');
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    icon.removeClass("fa-warning").addClass("fa-check");
                },
                submitHandler: function (form) {
                    //success1.show();
                    //error1.hide();
                    //form1.submit();
                    $("#Description").val(UE.getEditor('QuestioneditorDescription').getContent());
                    for (var i = 1; i <= parseInt($("#index").val()) ; i++)
                    {
                        
                        if ($("#AnswersPicture" + (i)).length > 0) {
                            var objimage = $("#AnswersPicture" + (i));
                            $(objimage).val($(objimage).parent().find(".hid_photo_ImageUrl").val());
                        } 
                    }
 
                    var data = form1.serializeObject();
                    $.ajax({
                        type: 'POST',
                        url: '/OnlineAssessment/QuestionsAjaxEdit',
                        data: data,
                        dataType: 'JSON',
                        success: function (result) {
                            if (result.success)
                                location.replace('/OnlineAssessment/QuestionsEdit/' + result.Id + '?SecurityId=' + $("#OnlineAssessmentSecurityId").val());
                            else {
                                showToast(3, '系统消息', result.message);//错误信息
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            showToast(3, '系统消息', JSON.stringify(errorThrown));//错误信息
                        },
                        async: false
                    });
                }
            });
        });


        var ue = UE.getEditor('QuestioneditorDescription', {
            //这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
            toolbars: [['fullscreen', 'source', '|', 'undo', 'redo', '|',
                'bold', 'italic', 'underline', 'fontborder', 'strikethrough', 'superscript', 'subscript', 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', '|', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'selectall', 'cleardoc', '|',
                'rowspacingtop', 'rowspacingbottom', 'lineheight', '|',
                'customstyle', 'paragraph', 'fontfamily', 'fontsize', '|',
                'directionalityltr', 'directionalityrtl', 'indent', '|',
                'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify', '|', 'touppercase', 'tolowercase', '|',
                'link', 'unlink', 'anchor', '|', 'imagenone', 'imageleft', 'imageright', 'imagecenter', '|',
                'simpleupload', 'insertimage', 'emotion', 'scrawl', 'attachment', 'insertframe', 'insertcode', 'pagebreak', 'template', '|',
                'horizontal', 'date', 'time', 'spechars', 'snapscreen', 'wordimage', '|',
                'inserttable', 'deletetable', 'insertparagraphbeforetable', 'insertrow', 'deleterow', 'insertcol', 'deletecol', 'mergecells', 'mergeright', 'mergedown', 'splittocells', 'splittorows', 'splittocols', '|',
                'print', 'preview', 'searchreplace', 'drafts', 'help'
            ]],
            initialFrameHeight: 300
        });

    </script>
}